openapi:  3.1.0
info:
  title: Infinite FANTASY BATTLE simulator OpenAPI
  version: 0.0.1
  license:
    name: MIT License
    identifier: MIT
    url: https://spdx.org/licenses/MIT.html
servers:
  - url: https://ifb-dev.cafe-capy.net
    description: Dev server
tags:
  - name: Healthcheck
    description: healthcheck
  - name: Authentication
    description: authentication
paths:
  /:
    get:
      operationId: Healthcheck
      summary: Healthcheck endpoint
      tags:
        -  Healthcheck
      security: []
      responses:
        default:
          description: Ok
          content:
            plain/text:
              schema:
                type: string
        '4XX':
          description: Ok
          content:
            plain/text:
              schema:
                type: string
  /api/auth/register:
    post:
      operationId: RegisterAuth
      summary: Register new user
      tags:
        - Authentication
      security: []
      parameters:
        - $ref: "#/components/parameters/AcceptJson"
        - $ref: "#/components/parameters/ContentTypeJson"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "john.doe@example.com"
              required:
                -  email
      responses:
        '200':
          description: Ok
          headers:
            Content-Type:
              schema:
                type: string
              required: true
              example: application/json; charset=UTF-8
            Content-Length:
              schema:
                type: integer
              required: true
              example: 100
          content:
            application/json:
              schema:
                type: object
                properties:
                  password:
                    $ref: "#/components/schemas/Password"
                required:
                  -  password
        '4XX':
          $ref: "#/components/responses/InvalidRequestResponse"
  /api/auth/login:
    post:
      operationId: LoginAuth
      summary: Login as user
      tags:
        -  Authentication
      security: []
      parameters:
        - $ref: "#/components/parameters/AcceptJson"
        - $ref: "#/components/parameters/ContentTypeJson"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "john.doe@example.com"
                password:
                  $ref: "#/components/schemas/Password"
              required:
                - email
                - password
      responses:
        '200':
          description: Ok
          headers:
            Content-Type:
              schema:
                type: string
              required: true
              example: application/json; charset=UTF-8
            Content-Length:
              schema:
                type: integer
              required: true
              example: 100
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    $ref: "#/components/schemas/LoginToken"
                required:
                  -  token
        '4XX':
          $ref: "#/components/responses/InvalidRequestResponse"
  /api/auth/me:
    post:
      operationId: MeAuth
      summary: Get my information
      tags:
        -  Authentication
      security:
        - apiKey: []
      parameters:
        - $ref: "#/components/parameters/AcceptJson"
        - $ref: "#/components/parameters/ContentTypeJson"
      responses:
        '200':
          description: Ok
          headers:
            Content-Type:
              schema:
                type: string
              required: true
              example: application/json; charset=UTF-8
            Content-Length:
              schema:
                type: integer
              required: true
              example: 100
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    format: email
                    example: "john.doe@example.com"
                required:
                  -  email
        '4XX':
          $ref: "#/components/responses/InvalidRequestResponse"

components:
  parameters:
    AcceptJson:
      in: header
      required: true
      name: Accept
      example: application/json; charset=UTF-8
      schema:
        type: string
    ContentTypeJson:
      in: header
      required: true
      name: Content-Type
      example: application/json; charset=UTF-8
      schema:
        type: string
  responses:
    InvalidRequestResponse:
      description: Invalid request response
      headers:
        Content-Type:
          schema:
            type: string
          required: true
          example: application/json; charset=UTF-8
        Content-Length:
          schema:
            type: integer
          required: true
          example: 100
      content:
        application/json:
          schema:
            type: object
            properties:
              ok:
                type: boolean
                example: false
              messages:
                type: array
                items:
                  type: string
            required:
              - ok
              - messages
  schemas:
    Password:
      type: string
      example: exampleRawPassword
    LoginToken:
      type: string
      example: exampleToken
  securitySchemes:
    apiKey:
      type: http
      scheme: Bearer
      bearerFormat: token
